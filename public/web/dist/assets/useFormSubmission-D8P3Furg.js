import{r as u,u as g}from"./main-DAdj96k2.js";function y(r){const n=u(!1),t=u(""),c=u("");return{isSubmitting:n,error:t,success:c,submitForm:async m=>{var f;n.value=!0,t.value="",c.value="";try{let e,a;const i=r.url;if(r.getFormData){if(e=r.getFormData(),!r.url)throw new Error("URL is required when using getFormData");a=r.url}else if(m){const o=m.target;if(e=new FormData(o),i?a=i:a=o.action,!a)throw new Error("No URL provided in options or form action")}else throw new Error("No form data provided");const w=e instanceof URLSearchParams?e:new URLSearchParams(e),h=g();w.append("shrimp",h.shrimp);const l=await fetch(a,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:w.toString()});let s;try{s=await l.json()}catch(o){const d=`Server returned an incomplete response (${i})`;throw console.error(d,o),new Error(d)}if(s!=null&&s.shrimp&&h.updateShrimp(s.shrimp),!l.ok)throw r.onError&&await r.onError(s),(f=l.headers.get("content-type"))!=null&&f.includes("application/json")?new Error(s.message||"Request was not successful. Please try again later."):new Error("Please refresh the page and try again.");c.value=r.successMessage,r.onSuccess&&await r.onSuccess(s),r.redirectUrl&&setTimeout(()=>{window.location.href=r.redirectUrl},r.redirectDelay||3e3)}catch(e){if(e instanceof Error)t.value=e.message;else{const a="An unexpected error occurred";console.error(a,e),t.value=a}}finally{n.value=!1}}}}export{y as u};
